name: Deploy to Staging/Production

# This runs when you push to develop (staging) or main (production)
on:
  push:
    branches: [ main, develop ]

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    name: Deploy to Staging
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Build project
        run: npm run build

      - name: Run database migrations (Staging)
        run: cd backend && npm run migrate
        env:
          DB_HOST: ${{ secrets.STAGING_DB_HOST }}
          DB_PORT: ${{ secrets.STAGING_DB_PORT }}
          DB_NAME: ${{ secrets.STAGING_DB_NAME }}
          DB_USER: ${{ secrets.STAGING_DB_USER }}
          DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
          NODE_ENV: staging

      # Add your staging deployment steps here
      - name: Deploy to Staging
        run: echo "Deploy to staging server here"

  deploy-production:
    if: github.ref == 'refs/heads/main'
    name: Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Build project
        run: npm run build

      - name: Run database migrations (Production)
        run: cd backend && npm run migrate
        env:
          DB_HOST: ${{ secrets.PROD_DB_HOST }}
          DB_PORT: ${{ secrets.PROD_DB_PORT }}
          DB_NAME: ${{ secrets.PROD_DB_NAME }}
          DB_USER: ${{ secrets.PROD_DB_USER }}
          DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          NODE_ENV: production

      # Add your production deployment steps here
      - name: Deploy to Production
        run: echo "Deploy to production server here"